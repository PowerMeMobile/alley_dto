message FullAddr {
    required bytes addr = 1;
    required uint32 ton = 2;
    required uint32 npi = 3;
}

message RemoveRetrievedMessages {
    required bytes id = 1;
    repeated bytes message_ids = 2;
}

//
// Incoming Sms Notifications
//
message SubscribeIncomingSmsReq {
    required bytes id = 1;
    required bytes customer_id = 2;
    required bytes user_id = 3;
    required FullAddr dest_addr = 4;
    required bytes notify_url = 5;
    optional bytes criteria = 6;
    optional bytes notification_format = 7;
    optional bytes correlator = 8;
    optional bytes callback_data = 9;
}

message SubscribeIncomingSmsResp {
    required bytes id = 1;
    required bytes subscription_id = 2;
}

message UnsubscribeIncomingSmsReq {
    required bytes id = 1;
    required bytes customer_id = 2;
    required bytes user_id = 3;
    required bytes subscription_id = 4;
}

message UnsubscribeIncomingSmsResp {
    required bytes id = 1;
}

message SmsNotificationReq {
    required bytes callback_data = 1;
    required uint32 datetime = 2;
    required FullAddr dest_addr = 3;
    required bytes message_id = 4;
    required bytes message = 5;
    required FullAddr sender_addr = 6;
    required bytes notify_url = 7;
}

//
// Sms Receipts Subscriptions
//
message SmsReceiptsSubscribeReq {
    required bytes id = 1;
    required bytes customer_id = 2;
    required bytes user_id = 3;
    required FullAddr dest_addr = 4;
    required bytes callback_data = 5;
    required bytes url = 6;
}

message SmsReceiptsSubscribeResp {
    required bytes id = 1;
}

message SmsReceiptsUnsubscribeReq {
    required bytes id = 1;
    required bytes customer_id = 2;
    required bytes user_id = 3;
    required bytes subscription_id = 4;
}

message SmsReceiptsUnsubscribeResp {
    required bytes id = 1;
}

message SmsDeliveryReceiptNotification {
    required bytes id = 1;
    required FullAddr dest_addr = 2;
    required bytes status = 3;
    required bytes url = 4;
    optional bytes callback_data = 5;
}

message ProcessInboxReq {
    enum Operation {
        list_all = 1;
        list_new = 2;
        fetch_all = 3;
        fetch_new = 4;
        fetch_id = 5;
        kill_all = 6;
        kill_old = 7;
        kill_id = 8;
    }

    required bytes id = 1;
    required bytes customer_id = 2;
    required bytes user_id = 3;
    required Operation operation = 4;
    repeated bytes message_ids = 5;
}

message ProcessInboxResp {
    enum Result {
       messages = 1;
       deleted = 2;
       error = 3;
    }

    message Message {
        required bytes id = 1;
        required bool new = 2;
        required FullAddr from = 3;
        required FullAddr to = 4;
        required uint32 timestamp = 5;
        required uint32 size = 6;
        optional bytes text = 7;
    }

    message Error {
        required bytes message = 1;
    }

    required bytes id = 1;
    required Result result = 2;

    repeated Message messages = 3;
    optional uint32 deleted = 4;
    optional Error error = 5;
}
